---
- name: Determine system architecture
  register: sys_architecture
  ansible.builtin.command:
    cmd: "dpkg --print-architecture"
  changed_when: sys_architecture.rc != 0

- name: "Get containerd config file status info"
  register: containerd_def_conf
  ansible.builtin.stat:
    path: /etc/containerd/config.toml

- name: Set containerd facts pre installation
  ansible.builtin.set_fact:
    sys_architecture: "{{ sys_architecture.stdout }}"
    containerd_conf_size: "{{ containerd_def_conf.stat.size if containerd_def_conf.stat.exists else 0 }}"

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: "present"

- name: Download docker GPG key
  ansible.builtin.get_url:
    url: "{{ docker_gpg_url }}"
    dest: "{{ docker_gpg_path }}"
    mode: '0644'
    force: true

- name: Add docker Official apt repository
  ansible.builtin.apt_repository:
    filename: docker
    repo: "deb [arch={{ sys_architecture }} signed-by={{ docker_gpg_path }}] {{ docker_repo_url }} {{ ansible_distribution_release }} stable"
    mode: '0644'
    state: "{{ 'absent' if destroy_mode else 'present' }}"

- name: Install containerd
  ansible.builtin.apt:
    name:
      - containerd.io
    state: "{{ 'absent' if destroy_mode else 'present' }}"
    purge: "{{ true if destroy_mode else false }}"

- name: "Create folder '/etc/containerd'"
  register: containerd_folder
  ansible.builtin.file:
    path: /etc/containerd
    state: "{{ 'absent' if destroy_mode else 'directory' }}"
    mode: '0644'

- name: 'Generate default containerd config'
  when:
    - not destroy_mode
    - containerd_conf_size | int < 6000
  block:
    - name: 'Get containerd config'
      register: containerd_def_config
      ansible.builtin.command:
        cmd: containerd config default
      changed_when: containerd_def_config.rc != 0

    - name: 'Save config into file'
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_def_config.stdout }}"
        mode: '0644'

# This modification is required to enable full support for systemd cgroup
# management. Without this option, Kubernetes system containers will
# periodically restart themselves.
# sources:
# cgroups - https://man7.org/linux/man-pages/man7/cgroups.7.html
# issue - https://github.com/kubernetes/kubernetes/issues/110177#issuecomment-1161647736
- name: "Set 'SystemdCgroup' option to value 'true'"
  when: not destroy_mode
  register: containerd_set_config
  notify:
    - Restart containerd service
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup\s*='
    line: '            SystemdCgroup = true'

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable containerd service
  when: not destroy_mode
  ansible.builtin.systemd:
    name: containerd
    enabled: true

- name: Remove k8s cluster
  when:
    - destroy_mode
    - kubelet_service.status.SubState == 'running'
  block:
    - name: Kubeadm reset
      register: last_cmd_log
      notify: Save output to log
      ansible.builtin.command:
        chdir: "{{ k8s_install_files_path }}"
        cmd: kubeadm reset --force
      changed_when: true

    - name: Clear containerd containers
      block:
        - name: Get containers ids
          register: containers_ids
          ansible.builtin.command:
            cmd: ctr -n k8s.io c ls -q
          changed_when: true

        - name: Clear containers
          when: containers_ids.stdout | length > 0
          ansible.builtin.command:
            cmd: "ctr -n k8s.io c rm {{ containers_ids.stdout }}"
          changed_when: true

    - name: Clear containerd images
      block:
        - name: Get images ids
          register: images_ids
          ansible.builtin.command:
            cmd: ctr -n k8s.io i ls -q
          changed_when: true

        - name: Clear images
          ansible.builtin.command:
            cmd: "ctr -n k8s.io i rm {{ images_ids.stdout }}"
          changed_when: true

    - name: Clear iptables
      block:
        - name: Flush chain
          changed_when: true
          ansible.builtin.command:
            cmd: iptables -F

        - name: Delete chain
          changed_when: true
          ansible.builtin.command:
            cmd: iptables -X

        - name: Flush chain in specific tables
          changed_when: true
          ansible.builtin.command:
            cmd: iptables -t {{ item }} -F
          with_items:
            - nat
            - raw
            - mangle

        - name: Delete chain in specific tables
          changed_when: true
          ansible.builtin.command:
            cmd: iptables -t {{ item }} -X
          with_items:
            - nat
            - raw
            - mangle

    - name: Remove k8s folders
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/cni/net.d
        - ~/.kube/config
        - /etc/kubernetes

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Reboot
  when: destroy_mode
  ansible.builtin.reboot:
    reboot_timeout: 3600
