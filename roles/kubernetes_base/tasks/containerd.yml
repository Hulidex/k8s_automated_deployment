---
- name: Determine system architecture
  register: sys_architecture
  ansible.builtin.command:
    cmd: "dpkg --print-architecture"
  changed_when: sys_architecture.rc != 0

- name: "Get containerd config file status info"
  register: containerd_def_conf
  ansible.builtin.stat:
    path: /etc/containerd/config.toml

- name: Set containerd facts pre installation
  ansible.builtin.set_fact:
    sys_architecture: "{{ sys_architecture.stdout }}"
    containerd_conf_size: "{{ containerd_def_conf.stat.size if containerd_def_conf.stat.exists else 0 }}"

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: "present"

- name: Download docker GPG key
  ansible.builtin.get_url:
    url: "{{ docker_gpg_url }}"
    dest: "{{ docker_gpg_path }}"
    mode: '0644'
    force: true

- name: Add docker Official GPG key
  ansible.builtin.apt_repository:
    filename: docker
    repo: "deb [arch={{ sys_architecture }} signed-by={{ docker_gpg_path }}] {{ docker_repo_url }} {{ ansible_distribution_release }} stable"
    mode: '0644'
    state: "{{ 'absent' if destroy_mode else 'present' }}"

- name: Install containerd
  ansible.builtin.apt:
    name:
      - containerd.io
    state: "{{ 'absent' if destroy_mode else 'present' }}"

- name: "Create folder '/etc/containerd'"
  register: containerd_folder
  ansible.builtin.file:
    path: /etc/containerd
    state: "{{ 'absent' if destroy_mode else 'directory' }}"
    mode: '0644'

- name: 'Generate default containerd config'
  when:
    - not destroy_mode
    - containerd_conf_size | int < 6000
  block:
    - name: 'Get containerd config'
      register: containerd_def_config
      ansible.builtin.command:
        cmd: containerd config default
      changed_when: containerd_def_config.rc != 0

    - name: 'Save config into file'
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_def_config.stdout }}"
        mode: '0644'

- name: "Set 'SystemdCgroup' option to value 'true'"
  when: not destroy_mode
  register: containerd_set_config
  notify:
    - Restart containerd service
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup\s*='
    line: '            SystemdCgroup = true'
